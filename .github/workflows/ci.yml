name: example_CI

on: [push, pull_request]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
        ports:
          - 3306:3306
        volumes:
          - ./db-init:/docker-entrypoint-initdb.d
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uuser -ppass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongo:
        image: mongo:6
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: pass
          MONGO_INITDB_DATABASE: store_manager
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h127.0.0.1 -P3306 -uuser -ppass --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Wait for MongoDB
        run: |
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo tee /etc/apt/trusted.gpg.d/mongodb-server-6.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          for i in {1..10}; do
            mongosh "mongodb://user:pass@127.0.0.1:27017/admin" --eval "db.adminCommand('ping')" && break
            echo "Waiting for MongoDB..."
            sleep 5
          done

      - name: Run init.sql
        run: mysql -h 127.0.0.1 -P 3306 -uuser -ppass mydb < ./db-init/init.sql

      - name: Verify MySQL tables
        run: |
          mysql -h127.0.0.1 -P3306 -uuser -ppass -e "SHOW TABLES IN mydb;"

      - name: Run tests
        working-directory: ./src
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_DB_NAME: mydb
          MONGODB_HOST: 127.0.0.1
          MONGODB_PORT: 27017
          MONGODB_DB_NAME: store_manager
          DB_USERNAME: user
          DB_PASSWORD: pass
        run: python -m pytest

      - name: Build Docker image
        run: docker build -t my-python-app .

      - name: Run Docker container (deploy step)
        run: docker run -d --name my-python-app -p 8000:8000 my-python-app
